% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/C_Object.R
\name{C_Object}
\alias{C_Object}
\title{CHSM Object}
\description{
An R6 class mapping to a C++ object

  Implementation is provided by C++ objects.
}
\section{Super class}{
\code{rchsm::C_ObjectRef} -> \code{C_Object}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-C_Object-finalize}{\code{C_Object$finalize()}}
\item \href{#method-C_Object-clone}{\code{C_Object$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rchsm" data-topic="C_ObjectRef" data-id="callFunction"><a href='../../rchsm/html/C_ObjectRef.html#method-C_ObjectRef-callFunction'><code>rchsm::C_ObjectRef$callFunction()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rchsm" data-topic="C_ObjectRef" data-id="initialize"><a href='../../rchsm/html/C_ObjectRef.html#method-C_ObjectRef-initialize'><code>rchsm::C_ObjectRef$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Object-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-C_Object-finalize}{}}}
\subsection{Method \code{finalize()}}{
Calls the wrapper of the destructor of the C object to release memory.
  Do not call this manually unless you really know what you are doing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Object$finalize()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SEXP object returned by the destructor method
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Object-clone"></a>}}
\if{latex}{\out{\hypertarget{method-C_Object-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Object$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

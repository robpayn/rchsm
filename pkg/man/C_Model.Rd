% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/C_Model.R
\name{C_Model}
\alias{C_Model}
\title{CHSM Model Object}
\description{
A Composite Hierarchy State Machine model.

  Implementation is provided by C++ objects.
}
\section{Super class}{
\code{\link[rchsm:C_Object]{rchsm::C_Object}} -> \code{C_Model}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-C_Model-new}{\code{C_Model$new()}}
\item \href{#method-C_Model-createCell}{\code{C_Model$createCell()}}
\item \href{#method-C_Model-createBound}{\code{C_Model$createBound()}}
\item \href{#method-C_Model-clone}{\code{C_Model$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rchsm" data-topic="C_Object" data-id="finalize"><a href='../../rchsm/html/C_Object.html#method-C_Object-finalize'><code>rchsm::C_Object$finalize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Model-new"></a>}}
\if{latex}{\out{\hypertarget{method-C_Model-new}{}}}
\subsection{Method \code{new()}}{
Constructs an object that is a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Model$new(name = "Model")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Model-createCell"></a>}}
\if{latex}{\out{\hypertarget{method-C_Model-createCell}{}}}
\subsection{Method \code{createCell()}}{
Creates a new cell in the model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Model$createCell(name, holon = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the cell to be created}

\item{\code{holon}}{(Optional) R6 holon object where the cell should be created.
Default NULL value results in creation of the cell in the model holon}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new R6 cell object mapped to the C++ cell object that was created.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Model-createBound"></a>}}
\if{latex}{\out{\hypertarget{method-C_Model-createBound}{}}}
\subsection{Method \code{createBound()}}{
Creates a new bound in the model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Model$createBound(name, cellFrom, cellTo, holon = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the bound to be created}

\item{\code{cellFrom}}{R6 bound object for the from cell}

\item{\code{cellTo}}{R6 bound object for the to cell}

\item{\code{holon}}{(Optional) R6 holon object where the bound should be created.
Default NULL value results in creation of the bound in the model holon}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new R6 bound object mapped to the C++ bound object that was created.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Model-clone"></a>}}
\if{latex}{\out{\hypertarget{method-C_Model-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

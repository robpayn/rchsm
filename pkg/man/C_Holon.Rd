% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/C_Holon.R
\name{C_Holon}
\alias{C_Holon}
\title{CHSM Holon Object}
\description{
A holon in a composite Hierarchy State Machine

  Implementation is provided by C++ objects.
}
\section{Super classes}{
\code{\link[rchsm:C_Object]{rchsm::C_Object}} -> \code{\link[rchsm:C_Variable]{rchsm::C_Variable}} -> \code{C_Holon}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-C_Holon-new}{\code{C_Holon$new()}}
\item \href{#method-C_Holon-getVariablePointer}{\code{C_Holon$getVariablePointer()}}
\item \href{#method-C_Holon-clone}{\code{C_Holon$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rchsm" data-topic="C_Object" data-id="callFunction"><a href='../../rchsm/html/C_Object.html#method-C_Object-callFunction'><code>rchsm::C_Object$callFunction()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rchsm" data-topic="C_Variable" data-id="getValueString"><a href='../../rchsm/html/C_Variable.html#method-C_Variable-getValueString'><code>rchsm::C_Variable$getValueString()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Holon-new"></a>}}
\if{latex}{\out{\hypertarget{method-C_Holon-new}{}}}
\subsection{Method \code{new()}}{
Constructs an object that is a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Holon$new(className, ..., regFinalizer, .external = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{className}}{(Optional) Name of the class used in accessing c++ functions.
Default value is "Holon"}

\item{\code{...}}{Abstract arguments passed to the constructor of the super class}

\item{\code{regFinalizer}}{Logical to indicate if a finalizer should be registered (TRUE)
or not (FALSE).
See super class C_Object for more information.}

\item{\code{.external}}{(Optional) If an external pointer is provided instead of the default
NULL value, then the new R6 object will be associated with the 
existing C++ Object referenced by the pointer.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Holon-getVariablePointer"></a>}}
\if{latex}{\out{\hypertarget{method-C_Holon-getVariablePointer}{}}}
\subsection{Method \code{getVariablePointer()}}{
Get an external pointer to the named variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Holon$getVariablePointer(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string with the name of the variable to retrieve}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An external pointer to the variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-C_Holon-clone"></a>}}
\if{latex}{\out{\hypertarget{method-C_Holon-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{C_Holon$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
